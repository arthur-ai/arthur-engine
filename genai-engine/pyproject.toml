[tool.poetry]
name = "arthur-genai-engine"
version = "2.1.77"
description = ""
authors = ["Arthur <engineering@arthur.ai>"]
readme = "README.md"
packages = [
    { include = "src" },
    { include = "src/auth" },
    { include = "src/db_models" },
    { include = "src/repositories" },
    { include = "src/routers" },
    { include = "src/schemas" },
    { include = "src/scorer" },
    { include = "src/utils" },
]

[tool.poetry.dependencies]
python = "3.12.*"
openai = "1.101.0"
fastapi = "0.116.1"
uvicorn = "0.35.0"
pydantic = "2.11.7"
sse-starlette = "3.0.2"
fastapi-sqlalchemy = "0.2.1"
alembic = "1.16.5"
boto3 = "1.40.25"
python-dotenv = "1.1.1"
psycopg2-binary = "2.9.10"
sqlalchemy = "2.0.43"
pgvector = "0.4.1"
python-multipart = "0.0.20"
pypdf = "6.0.0"
httpx = "0.28.1"
transformers = "4.53.0"
authlib = "1.6.3"
requests = "2.32.5"
starlette = "0.47.3"
pyjwt = "2.10.1"
azure-storage-blob = "12.26.0"
itsdangerous = "2.2.0"
newrelic = "10.16.0"
importlib-metadata = "8.7.0"
opentelemetry-instrumentation-logging = "0.57b0"
opentelemetry-instrumentation = "0.57b0"
opentelemetry-instrumentation-fastapi = "0.57b0"
opentelemetry-exporter-otlp = "1.36.0"
opentelemetry-instrumentation-sqlalchemy = "0.57b0"
tiktoken = "0.11.0"
nltk = "3.9.1"
more-itertools = "10.7.0"
presidio-analyzer = "2.2.359"
presidio-anonymizer = "2.2.359"
python-keycloak = "5.8.1"
bcrypt = "4.3.0"
cachetools = "6.2.0"
sentence-transformers = "5.0.0"
en-core-web-lg = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.8.0/en_core_web_lg-3.8.0-py3-none-any.whl" }
torch = [
    { version = "=2.6.0", source = "PyPI", platform = "darwin" },
    { version = "=2.6.0+cpu", source = "pytorch-cpu", platform = "linux" },
    { version = "=2.6.0+cpu", source = "pytorch-cpu", platform = "win32" },
]
commonmark = "0.9.1"
gunicorn = "^23.0.0"
fastapi-pagination = "0.14.1"
pydantic-settings = "^2.3.4"
spacy = ">=3.8.3"
bert-score = "0.3.13"
langchain = "0.3.27"
langchain-community = "0.3.29"
langchain-openai = "0.3.32"
cloudpickle = "3.1.1"
amplitude-analytics = "^1.1.5"
sentencepiece = "0.2.1"
gliner = "0.2.21"
openinference-semantic-conventions = "^0.1.12"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[[tool.poetry.source]]
name = "arthur-repo"
url = "https://gitlab.com/api/v4/projects/45576036/packages/pypi"
priority = "explicit"

[tool.poetry.group.dev.dependencies]
pytest = "8.4.2"
pytest-asyncio = "1.1.0"
pytest-cov = "6.3.0"
pre-commit = "4.3.0"
black = "25.1.0"
mypy = "^1.13.0"


[tool.poetry.group.performance.dependencies]
locust = "2.40.1"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv"
pythonpath = ["src"]
testpaths = [
    "tests"
]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "api_key_tests: mark a test as testing api key actions",
    "aws_live: mark a test as running against a live environment. AWS_BUCKET_NAME must be supplied as an environment variable",
    "azure_live: mark a test as running against a live environment. AZURE_STORAGE_CONTAINER_NAME and AZURE_STORAGE_CONNECTION_STRING must be supplied as a environment variables",
    "integration_tests: mark a test as running an integration test. These will tend to replicate user flows and minimize the amount of junk data created",
    "unit_tests: mark a test as part of the unit tests suite. These should run locally with no outside configuration required. Should also be entirely self contained (no external dependencies)",
    "skip_auto_api_key_create: mark a test as opting out of api key creation and deletion pre and post steps"
]

[tool.poetry.scripts]
serve = "src.server:start"
generate_changelog = "changelog:main"
routes_security_check = "routes_security_check:main"

[tool.black]
target-version = ['py312']

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
