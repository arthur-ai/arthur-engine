AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ArthurResourceNamespace:
    Description: 'A unique namespace for this Arthur stack resources (e.g. arthur1). It should be between 1 and 14 characters long.'
    Type: String
    MinLength: '1'
    MaxLength: '14'
    ConstraintDescription: 'The Arthur platform resources namespace must be 1-14 characters long.'
    Default: 'arthur'
  ArthurResourceNameSuffix:
    Description: 'Name suffix for this Arthur stack resources (e.g. -prod). It should be between 0 and 5 characters long.'
    Type: String
    MinLength: '0'
    MaxLength: '5'
    ConstraintDescription: 'The Arthur platform resources name suffix must be 0-5 characters long.'
    Default: ''
  ContainerRepositoryUsername:
    Description: 'Your username for accessing the container repository'
    Type: String
    NoEcho: true
    Default: 'default'
  ContainerRepositoryPassword:
    Description: 'Your password for accessing the container repository'
    Type: String
    NoEcho: true
    Default: 'default'
  PostgresPassword:
    Description: 'Postgres database password'
    Type: String
    NoEcho: true
  PostgresUsername:
    Description: 'Postgres database username'
    Default: 'arthur_admin'
    Type: String

Conditions:
  UseCustomPostgresPassword: !Not [ !Equals [ !Ref PostgresPassword, '' ] ]
  AutoGeneratePostgresPassword: !Equals [ !Ref PostgresPassword, '' ]

Resources:
  ContainerRepositoryCredentialsSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub "${ArthurResourceNamespace}_arthur_container_repository_credentials_secret_${ArthurResourceNameSuffix}"
      SecretString: !Sub "{\"username\": \"${ContainerRepositoryUsername}\", \"password\": \"${ContainerRepositoryPassword}\"}"
  PostgresCredentialsSecretWithCustomPassword:
    Type: 'AWS::SecretsManager::Secret'
    Condition: UseCustomPostgresPassword
    Properties:
      Name: !Sub "${ArthurResourceNamespace}_postgresql_credentials_secret_${ArthurResourceNameSuffix}"
      SecretString: !Sub "{\"username\": \"${PostgresUsername}\", \"password\": \"${PostgresPassword}\"}"
  PostgresCredentialsSecretWithGeneratedPassword:
    Type: 'AWS::SecretsManager::Secret'
    Condition: AutoGeneratePostgresPassword
    Properties:
      Name: !Sub "${ArthurResourceNamespace}_postgresql_credentials_secret_${ArthurResourceNameSuffix}"
      GenerateSecretString:
        SecretStringTemplate: !Sub "{\"username\": \"${PostgresUsername}\"}"
        GenerateStringKey: "password"
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16

Outputs:
  ContainerRepositoryCredentialsSecretOutput:
    Description: 'Secret containing username and password for connecting to the container repository'
    Value: !Ref ContainerRepositoryCredentialsSecret
  PostgresCredentialsSecretOutput:
    Description: 'Secret containing username and password for connecting to the Postgres database'
    Value: !If
      - UseCustomPostgresPassword
      - !Ref PostgresCredentialsSecretWithCustomPassword
      - !Ref PostgresCredentialsSecretWithGeneratedPassword
