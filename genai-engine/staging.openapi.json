{
    "openapi": "3.1.0",
    "info": {
        "title": "Arthur GenAI Engine",
        "version": "2.1.80"
    },
    "paths": {
        "/api/v2/usage/tokens": {
            "get": {
                "tags": [
                    "Usage"
                ],
                "summary": "Get Token Usage",
                "description": "Get token usage.",
                "operationId": "get_token_usage_api_v2_usage_tokens_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Inclusive start date in ISO8601 string format. Defaults to the beginning of the current day if not provided.",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format. Defaults to the beginning of the current day if not provided."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Exclusive end date in ISO8601 string format. Defaults to the end of the current day if not provided.",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format. Defaults to the end of the current day if not provided."
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TokenUsageScope"
                            },
                            "description": "Entities to group token counts on.",
                            "default": [
                                "rule_type"
                            ],
                            "title": "Group By"
                        },
                        "description": "Entities to group token counts on."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TokenUsageResponse"
                                    },
                                    "title": "Response Get Token Usage Api V2 Usage Tokens Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/feedback/{inference_id}": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Post Feedback",
                "description": "Post feedback for LLM Application.",
                "operationId": "post_feedback_api_v2_feedback__inference_id__post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "inference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Inference Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InferenceFeedbackResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/feedback/query": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Query Feedback",
                "description": "Paginated feedback querying. See parameters for available filters. Includes feedback from archived tasks and rules.",
                "operationId": "query_feedback_api_v2_feedback_query_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Inclusive start date in ISO8601 string format",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format"
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Exclusive end date in ISO8601 string format",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format"
                    },
                    {
                        "name": "feedback_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Feedback ID to filter on",
                            "title": "Feedback Id"
                        },
                        "description": "Feedback ID to filter on"
                    },
                    {
                        "name": "inference_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Inference ID to filter on",
                            "title": "Inference Id"
                        },
                        "description": "Inference ID to filter on"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Target of the feedback. Must be one of ['context', 'response_results', 'prompt_results']",
                            "title": "Target"
                        },
                        "description": "Target of the feedback. Must be one of ['context', 'response_results', 'prompt_results']"
                    },
                    {
                        "name": "score",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Score of the feedback. Must be an integer.",
                            "title": "Score"
                        },
                        "description": "Score of the feedback. Must be an integer."
                    },
                    {
                        "name": "feedback_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "User ID of the user giving feedback to filter on (query will perform fuzzy search)",
                            "title": "Feedback User Id"
                        },
                        "description": "User ID of the user giving feedback to filter on (query will perform fuzzy search)"
                    },
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Conversation ID to filter on",
                            "title": "Conversation Id"
                        },
                        "description": "Conversation ID to filter on"
                    },
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Task ID to filter on",
                            "title": "Task Id"
                        },
                        "description": "Task ID to filter on"
                    },
                    {
                        "name": "inference_user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "User ID of the user who created the inferences to filter on (query will perform fuzzy search)",
                            "title": "Inference User Id"
                        },
                        "description": "User ID of the user who created the inferences to filter on (query will perform fuzzy search)"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryFeedbackResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/inferences/query": {
            "get": {
                "tags": [
                    "Inferences"
                ],
                "summary": "Query Inferences",
                "description": "Paginated inference querying. See parameters for available filters. Includes inferences from archived tasks and rules.",
                "operationId": "query_inferences_api_v2_inferences_query_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Task ID to filter on.",
                            "default": [],
                            "title": "Task Ids"
                        },
                        "description": "Task ID to filter on."
                    },
                    {
                        "name": "task_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Task name to filter on.",
                            "title": "Task Name"
                        },
                        "description": "Task name to filter on."
                    },
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Conversation ID to filter on.",
                            "title": "Conversation Id"
                        },
                        "description": "Conversation ID to filter on."
                    },
                    {
                        "name": "inference_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Inference ID to filter on.",
                            "title": "Inference Id"
                        },
                        "description": "Inference ID to filter on."
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "User ID to filter on.",
                            "title": "User Id"
                        },
                        "description": "User ID to filter on."
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Inclusive start date in ISO8601 string format.",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Exclusive end date in ISO8601 string format.",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format."
                    },
                    {
                        "name": "rule_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RuleType"
                            },
                            "description": "List of RuleType to query for. Any inference that ran any rule in the list will be returned. Defaults to all statuses. If used in conjunction with with rule_statuses, will return inferences with rules in the intersection of rule_types and rule_statuses.",
                            "default": [],
                            "title": "Rule Types"
                        },
                        "description": "List of RuleType to query for. Any inference that ran any rule in the list will be returned. Defaults to all statuses. If used in conjunction with with rule_statuses, will return inferences with rules in the intersection of rule_types and rule_statuses."
                    },
                    {
                        "name": "rule_statuses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RuleResultEnum"
                            },
                            "description": "List of RuleResultEnum to query for. Any inference with any rule status in the list will be returned. Defaults to all statuses. If used in conjunction with with rule_types, will return inferences with rules in the intersection of rule_statuses and rule_types.",
                            "default": [],
                            "title": "Rule Statuses"
                        },
                        "description": "List of RuleResultEnum to query for. Any inference with any rule status in the list will be returned. Defaults to all statuses. If used in conjunction with with rule_types, will return inferences with rules in the intersection of rule_statuses and rule_types."
                    },
                    {
                        "name": "prompt_statuses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RuleResultEnum"
                            },
                            "description": "List of RuleResultEnum to query for at inference prompt stage level. Must be 'Pass' / 'Fail'. Defaults to both.",
                            "default": [],
                            "title": "Prompt Statuses"
                        },
                        "description": "List of RuleResultEnum to query for at inference prompt stage level. Must be 'Pass' / 'Fail'. Defaults to both."
                    },
                    {
                        "name": "response_statuses",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RuleResultEnum"
                            },
                            "description": "List of RuleResultEnum to query for at inference response stage level. Must be 'Pass' / 'Fail'. Defaults to both. Inferences missing responses will not be affected by this filter.",
                            "default": [],
                            "title": "Response Statuses"
                        },
                        "description": "List of RuleResultEnum to query for at inference response stage level. Must be 'Pass' / 'Fail'. Defaults to both. Inferences missing responses will not be affected by this filter."
                    },
                    {
                        "name": "include_count",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Whether to include the total count of matching inferences. Set to False to improve query performance for large datasets. Count will be returned as -1 if set to False.",
                            "default": true,
                            "title": "Include Count"
                        },
                        "description": "Whether to include the total count of matching inferences. Set to False to improve query performance for large datasets. Count will be returned as -1 if set to False."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryInferencesResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/default_rules": {
            "get": {
                "tags": [
                    "Rules"
                ],
                "summary": "Get Default Rules",
                "description": "Get default rules.",
                "operationId": "get_default_rules_api_v2_default_rules_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/RuleResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get Default Rules Api V2 Default Rules Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rules"
                ],
                "summary": "Create Default Rule",
                "description": "Create a default rule. Default rules are applied universally across existing tasks, subsequently created new tasks, and any non-task related requests. Once a rule is created, it is immutable. Available rules are 'KeywordRule', 'ModelHallucinationRuleV2', 'ModelSensitiveDataRule', 'PIIDataRule', 'PromptInjectionRule', 'RegexRule', 'ToxicityRule'. Note: The rules are cached by the validation endpoints for 60 seconds.",
                "operationId": "create_default_rule_api_v2_default_rules_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewRuleRequest"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Sensitive Data Example",
                                    "description": "Sensitive Data Example with its required configuration",
                                    "value": {
                                        "name": "Sensitive Data Rule",
                                        "type": "ModelSensitiveDataRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": false,
                                        "config": {
                                            "examples": [
                                                {
                                                    "example": "John has O negative blood group",
                                                    "result": true
                                                },
                                                {
                                                    "example": "Most of the people have A positive blood group",
                                                    "result": false
                                                }
                                            ],
                                            "hint": "specific individual's blood types"
                                        }
                                    }
                                },
                                "example2": {
                                    "summary": "Regex Example",
                                    "description": "Regex Example with its required configuration. Be sure to properly encode requests using JSON libraries. For example, the regex provided encodes to a different string when encoded to account for escape characters.",
                                    "value": {
                                        "name": "SSN Regex Rule",
                                        "type": "RegexRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "regex_patterns": [
                                                "\\d{3}-\\d{2}-\\d{4}",
                                                "\\d{5}-\\d{6}-\\d{7}"
                                            ]
                                        }
                                    }
                                },
                                "example3": {
                                    "summary": "Keywords Rule Example",
                                    "description": "Keywords Rule Example with its required configuration",
                                    "value": {
                                        "name": "Blocked Keywords Rule",
                                        "type": "KeywordRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "keywords": [
                                                "Blocked_Keyword_1",
                                                "Blocked_Keyword_2"
                                            ]
                                        }
                                    }
                                },
                                "example4": {
                                    "summary": "Prompt Injection Rule Example",
                                    "description": "Prompt Injection Rule Example, no configuration required",
                                    "value": {
                                        "name": "Prompt Injection Rule",
                                        "type": "PromptInjectionRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": false
                                    }
                                },
                                "example5": {
                                    "summary": "Hallucination Rule V1 Example (Deprecated)",
                                    "description": "Hallucination Rule Example, no configuration required (This rule is deprecated. Use ModelHallucinationRuleV2 instead.)",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRule",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example6": {
                                    "summary": "Hallucination Rule V2 Example",
                                    "description": "Hallucination Rule Example, no configuration required",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRuleV2",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example7": {
                                    "summary": "Hallucination Rule V3 Example (Beta)",
                                    "description": "Hallucination Rule Example, no configuration required. This rule is in beta and must be enabled by the system administrator.",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRuleV3",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example8": {
                                    "summary": "PII Rule Example",
                                    "description": "PII Rule Example, no configuration required. \"disabled_pii_entities\", \"confidence_threshold\", and \"allow_list\" accepted. Valid value for \"confidence_threshold\" is 0.0-1.0. Valid values for \"disabled_pii_entities\" are CREDIT_CARD,CRYPTO,DATE_TIME,EMAIL_ADDRESS,IBAN_CODE,IP_ADDRESS,NRP,LOCATION,PERSON,PHONE_NUMBER,MEDICAL_LICENSE,URL,US_BANK_NUMBER,US_DRIVER_LICENSE,US_ITIN,US_PASSPORT,US_SSN",
                                    "value": {
                                        "name": "PII Rule",
                                        "type": "PIIDataRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "disabled_pii_entities": [
                                                "EMAIL_ADDRESS",
                                                "PHONE_NUMBER"
                                            ],
                                            "confidence_threshold": "0.5",
                                            "allow_list": [
                                                "arthur.ai",
                                                "Arthur"
                                            ]
                                        }
                                    }
                                },
                                "example9": {
                                    "summary": "Toxicity Rule Example",
                                    "description": "Toxicity Rule Example, no configuration required. Threshold accepted",
                                    "value": {
                                        "name": "Toxicity Rule",
                                        "type": "ToxicityRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "threshold": 0.5
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            }
        },
        "/api/v2/default_rules/{rule_id}": {
            "delete": {
                "tags": [
                    "Rules"
                ],
                "summary": "Archive Default Rule",
                "description": "Archive existing default rule.",
                "operationId": "archive_default_rule_api_v2_default_rules__rule_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Rule Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/rules/search": {
            "post": {
                "tags": [
                    "Rules"
                ],
                "summary": "Search Rules",
                "description": "Search default and/or task rules.",
                "operationId": "search_rules_api_v2_rules_search_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchRulesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchRulesResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get All Tasks",
                "description": "[Deprecated] Use /tasks/search endpoint. This endpoint will be removed in a future release.",
                "operationId": "get_all_tasks_api_v2_tasks_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TaskResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Tasks Api V2 Tasks Get"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "API Key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create Task",
                "description": "Register a new task. When a new task is created, all existing default rules will be auto-applied for this new task. Optionally specify if the task is agentic.",
                "operationId": "create_task_api_v2_tasks_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            }
        },
        "/api/v2/tasks/{task_id}": {
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Archive Task",
                "description": "Archive task. Also archives all task-scoped rules. Associated default rules are unaffected.",
                "operationId": "archive_task_api_v2_tasks__task_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get Task",
                "description": "Get tasks.",
                "operationId": "get_task_api_v2_tasks__task_id__get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/task": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Redirect To Tasks",
                "description": "Redirect to /tasks endpoint.",
                "operationId": "redirect_to_tasks_api_v2_task_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/search": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Search Tasks",
                "description": "Search tasks. Can filter by task IDs, task name substring, and agentic status.",
                "operationId": "search_tasks_api_v2_tasks_search_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchTasksRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchTasksResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/rules": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create Task Rule",
                "description": "Create a rule to be applied only to this task. Available rule types are KeywordRule, ModelHallucinationRuleV2, ModelSensitiveDataRule, PIIDataRule, PromptInjectionRule, RegexRule, ToxicityRule.Note: The rules are cached by the validation endpoints for 60 seconds.",
                "operationId": "create_task_rule_api_v2_tasks__task_id__rules_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewRuleRequest"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Sensitive Data Example",
                                    "description": "Sensitive Data Example with its required configuration",
                                    "value": {
                                        "name": "Sensitive Data Rule",
                                        "type": "ModelSensitiveDataRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": false,
                                        "config": {
                                            "examples": [
                                                {
                                                    "example": "John has O negative blood group",
                                                    "result": true
                                                },
                                                {
                                                    "example": "Most of the people have A positive blood group",
                                                    "result": false
                                                }
                                            ],
                                            "hint": "specific individual's blood types"
                                        }
                                    }
                                },
                                "example2": {
                                    "summary": "Regex Example",
                                    "description": "Regex Example with its required configuration. Be sure to properly encode requests using JSON libraries. For example, the regex provided encodes to a different string when encoded to account for escape characters.",
                                    "value": {
                                        "name": "SSN Regex Rule",
                                        "type": "RegexRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "regex_patterns": [
                                                "\\d{3}-\\d{2}-\\d{4}",
                                                "\\d{5}-\\d{6}-\\d{7}"
                                            ]
                                        }
                                    }
                                },
                                "example3": {
                                    "summary": "Keywords Rule Example",
                                    "description": "Keywords Rule Example with its required configuration",
                                    "value": {
                                        "name": "Blocked Keywords Rule",
                                        "type": "KeywordRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "keywords": [
                                                "Blocked_Keyword_1",
                                                "Blocked_Keyword_2"
                                            ]
                                        }
                                    }
                                },
                                "example4": {
                                    "summary": "Prompt Injection Rule Example",
                                    "description": "Prompt Injection Rule Example, no configuration required",
                                    "value": {
                                        "name": "Prompt Injection Rule",
                                        "type": "PromptInjectionRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": false
                                    }
                                },
                                "example5": {
                                    "summary": "Hallucination Rule V1 Example (Deprecated)",
                                    "description": "Hallucination Rule Example, no configuration required (This rule is deprecated. Use ModelHallucinationRuleV2 instead.)",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRule",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example6": {
                                    "summary": "Hallucination Rule V2 Example",
                                    "description": "Hallucination Rule Example, no configuration required",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRuleV2",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example7": {
                                    "summary": "Hallucination Rule V3 Example (Beta)",
                                    "description": "Hallucination Rule Example, no configuration required. This rule is in beta and must be enabled by the system administrator.",
                                    "value": {
                                        "name": "Hallucination Rule",
                                        "type": "ModelHallucinationRuleV3",
                                        "apply_to_prompt": false,
                                        "apply_to_response": true
                                    }
                                },
                                "example8": {
                                    "summary": "PII Rule Example",
                                    "description": "PII Rule Example, no configuration required. \"disabled_pii_entities\", \"confidence_threshold\", and \"allow_list\" accepted. Valid value for \"confidence_threshold\" is 0.0-1.0. Valid values for \"disabled_pii_entities\" are CREDIT_CARD,CRYPTO,DATE_TIME,EMAIL_ADDRESS,IBAN_CODE,IP_ADDRESS,NRP,LOCATION,PERSON,PHONE_NUMBER,MEDICAL_LICENSE,URL,US_BANK_NUMBER,US_DRIVER_LICENSE,US_ITIN,US_PASSPORT,US_SSN",
                                    "value": {
                                        "name": "PII Rule",
                                        "type": "PIIDataRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "disabled_pii_entities": [
                                                "EMAIL_ADDRESS",
                                                "PHONE_NUMBER"
                                            ],
                                            "confidence_threshold": "0.5",
                                            "allow_list": [
                                                "arthur.ai",
                                                "Arthur"
                                            ]
                                        }
                                    }
                                },
                                "example9": {
                                    "summary": "Toxicity Rule Example",
                                    "description": "Toxicity Rule Example, no configuration required. Threshold accepted",
                                    "value": {
                                        "name": "Toxicity Rule",
                                        "type": "ToxicityRule",
                                        "apply_to_prompt": true,
                                        "apply_to_response": true,
                                        "config": {
                                            "threshold": 0.5
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RuleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/rules/{rule_id}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update Task Rules",
                "description": "Enable or disable an existing rule for this task including the default rules.",
                "operationId": "update_task_rules_api_v2_tasks__task_id__rules__rule_id__patch",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    },
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Rule Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Archive Task Rule",
                "description": "Archive an existing rule for this task.",
                "operationId": "archive_task_rule_api_v2_tasks__task_id__rules__rule_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    },
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Rule Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/metrics": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create Task Metric",
                "description": "Create metrics for a task. Only agentic tasks can have metrics.",
                "operationId": "create_task_metric_api_v2_tasks__task_id__metrics_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMetricRequest"
                            },
                            "examples": {
                                "example1": {
                                    "type": "QueryRelevance",
                                    "name": "My User Query Relevance",
                                    "metric_metadata": "This is a test metric metadata"
                                },
                                "example2": {
                                    "type": "QueryRelevance",
                                    "name": "My User Query Relevance with Config",
                                    "metric_metadata": "This is a test metric metadata",
                                    "config": {
                                        "relevance_threshold": 0.8,
                                        "use_llm_judge": false
                                    }
                                },
                                "example3": {
                                    "type": "ResponseRelevance",
                                    "name": "My Response Relevance",
                                    "metric_metadata": "This is a test metric metadata",
                                    "config": {
                                        "use_llm_judge": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/metrics/{metric_id}": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update Task Metric",
                "description": "Update a task metric.",
                "operationId": "update_task_metric_api_v2_tasks__task_id__metrics__metric_id__patch",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    },
                    {
                        "name": "metric_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Metric Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMetricRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Archive Task Metric",
                "description": "Archive a task metric.",
                "operationId": "archive_task_metric_api_v2_tasks__task_id__metrics__metric_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    },
                    {
                        "name": "metric_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Metric Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/validate_prompt": {
            "post": {
                "tags": [
                    "Default Validation"
                ],
                "summary": "Default Validate Prompt",
                "description": "[Deprecated] Validate a non-task related prompt based on the configured default rules.",
                "operationId": "default_validate_prompt_api_v2_validate_prompt_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptValidationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "API Key": []
                    }
                ]
            }
        },
        "/api/v2/validate_response/{inference_id}": {
            "post": {
                "tags": [
                    "Default Validation"
                ],
                "summary": "Default Validate Response",
                "description": "[Deprecated] Validate a non-task related generated response based on the configured default rules. Inference ID corresponds to the previously validated associated prompt\u2019s inference ID. Must provide context if a Hallucination Rule is an enabled default rule.",
                "operationId": "default_validate_response_api_v2_validate_response__inference_id__post",
                "deprecated": true,
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "inference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Inference Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponseValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/validate_prompt": {
            "post": {
                "tags": [
                    "Task Based Validation"
                ],
                "summary": "Validate Prompt Endpoint",
                "description": "Validate a prompt based on the configured rules for this task. Note: Rules related to specific tasks are cached for 60 seconds.",
                "operationId": "validate_prompt_endpoint_api_v2_tasks__task_id__validate_prompt_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/tasks/{task_id}/validate_response/{inference_id}": {
            "post": {
                "tags": [
                    "Task Based Validation"
                ],
                "summary": "Validate Response Endpoint",
                "description": "Validate a response based on the configured rules for this task. Inference ID corresponds to the previously validated associated prompt\u2019s inference id. Must provide context if a Hallucination Rule is an enabled task rule. Note: Rules related to specific tasks are cached for 60 seconds.",
                "operationId": "validate_response_endpoint_api_v2_tasks__task_id__validate_response__inference_id__post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "inference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Inference Id"
                        }
                    },
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Task Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponseValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/api_keys/": {
            "get": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Get All Active Api Keys",
                "operationId": "get_all_active_api_keys_auth_api_keys__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKeyResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Active Api Keys Auth Api Keys  Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Create Api Key",
                "description": "Generates a new API key. Up to 1000 active keys can exist at the same time by default. Contact your system administrator if you need more. Allowed roles are: DEFAULT-RULE-ADMIN, TASK-ADMIN, VALIDATION-USER, ORG-AUDITOR, ORG-ADMIN.",
                "operationId": "create_api_key_auth_api_keys__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewApiKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            }
        },
        "/auth/api_keys/{api_key_id}": {
            "get": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Get Api Key",
                "operationId": "get_api_key_auth_api_keys__api_key_id__get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/api_keys/deactivate/{api_key_id}": {
            "delete": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Deactivate Api Key",
                "operationId": "deactivate_api_key_auth_api_keys_deactivate__api_key_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Api Key Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/traces": {
            "post": {
                "tags": [
                    "Traces"
                ],
                "summary": "Receive Traces",
                "description": "Receiver for OpenInference trace standard.",
                "operationId": "receive_traces_v1_traces_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "format": "binary",
                                "title": "Body"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "API Key": []
                    }
                ]
            }
        },
        "/v1/traces/query": {
            "get": {
                "tags": [
                    "Spans"
                ],
                "summary": "Query Traces",
                "description": "Query traces with comprehensive filtering. Returns traces containing spans that match the filters, not just the spans themselves.",
                "operationId": "query_spans_v1_traces_query_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "task_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "description": "Task IDs to filter on. At least one is required.",
                            "title": "Task Ids"
                        },
                        "description": "Task IDs to filter on. At least one is required."
                    },
                    {
                        "name": "trace_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Trace IDs to filter on. Optional.",
                            "title": "Trace Ids"
                        },
                        "description": "Trace IDs to filter on. Optional."
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC).",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC).",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "tool_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Return only results with this tool name.",
                            "title": "Tool Name"
                        },
                        "description": "Return only results with this tool name."
                    },
                    {
                        "name": "span_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN",
                            "title": "Span Types"
                        },
                        "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN"
                    },
                    {
                        "name": "query_relevance_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Equal to this value.",
                            "title": "Query Relevance Eq"
                        },
                        "description": "Equal to this value."
                    },
                    {
                        "name": "query_relevance_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than this value.",
                            "title": "Query Relevance Gt"
                        },
                        "description": "Greater than this value."
                    },
                    {
                        "name": "query_relevance_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than or equal to this value.",
                            "title": "Query Relevance Gte"
                        },
                        "description": "Greater than or equal to this value."
                    },
                    {
                        "name": "query_relevance_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than this value.",
                            "title": "Query Relevance Lt"
                        },
                        "description": "Less than this value."
                    },
                    {
                        "name": "query_relevance_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than or equal to this value.",
                            "title": "Query Relevance Lte"
                        },
                        "description": "Less than or equal to this value."
                    },
                    {
                        "name": "response_relevance_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Equal to this value.",
                            "title": "Response Relevance Eq"
                        },
                        "description": "Equal to this value."
                    },
                    {
                        "name": "response_relevance_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than this value.",
                            "title": "Response Relevance Gt"
                        },
                        "description": "Greater than this value."
                    },
                    {
                        "name": "response_relevance_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than or equal to this value.",
                            "title": "Response Relevance Gte"
                        },
                        "description": "Greater than or equal to this value."
                    },
                    {
                        "name": "response_relevance_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than this value.",
                            "title": "Response Relevance Lt"
                        },
                        "description": "Less than this value."
                    },
                    {
                        "name": "response_relevance_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than or equal to this value.",
                            "title": "Response Relevance Lte"
                        },
                        "description": "Less than or equal to this value."
                    },
                    {
                        "name": "tool_selection",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ToolClassEnum",
                            "description": "Tool selection evaluation result."
                        },
                        "description": "Tool selection evaluation result."
                    },
                    {
                        "name": "tool_usage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ToolClassEnum",
                            "description": "Tool usage evaluation result."
                        },
                        "description": "Tool usage evaluation result."
                    },
                    {
                        "name": "trace_duration_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration exactly equal to this value (seconds).",
                            "title": "Trace Duration Eq"
                        },
                        "description": "Duration exactly equal to this value (seconds)."
                    },
                    {
                        "name": "trace_duration_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration greater than this value (seconds).",
                            "title": "Trace Duration Gt"
                        },
                        "description": "Duration greater than this value (seconds)."
                    },
                    {
                        "name": "trace_duration_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration greater than or equal to this value (seconds).",
                            "title": "Trace Duration Gte"
                        },
                        "description": "Duration greater than or equal to this value (seconds)."
                    },
                    {
                        "name": "trace_duration_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration less than this value (seconds).",
                            "title": "Trace Duration Lt"
                        },
                        "description": "Duration less than this value (seconds)."
                    },
                    {
                        "name": "trace_duration_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration less than or equal to this value (seconds).",
                            "title": "Trace Duration Lte"
                        },
                        "description": "Duration less than or equal to this value (seconds)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryTracesWithMetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/traces/metrics/": {
            "get": {
                "tags": [
                    "Spans"
                ],
                "summary": "Compute Missing Metrics and Query Traces",
                "description": "Query traces with comprehensive filtering and compute metrics. Returns traces containing spans that match the filters with computed metrics.",
                "operationId": "query_spans_with_metrics_v1_traces_metrics__get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "task_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "description": "Task IDs to filter on. At least one is required.",
                            "title": "Task Ids"
                        },
                        "description": "Task IDs to filter on. At least one is required."
                    },
                    {
                        "name": "trace_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Trace IDs to filter on. Optional.",
                            "title": "Trace Ids"
                        },
                        "description": "Trace IDs to filter on. Optional."
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC).",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC).",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "tool_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Return only results with this tool name.",
                            "title": "Tool Name"
                        },
                        "description": "Return only results with this tool name."
                    },
                    {
                        "name": "span_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN",
                            "title": "Span Types"
                        },
                        "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN"
                    },
                    {
                        "name": "query_relevance_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Equal to this value.",
                            "title": "Query Relevance Eq"
                        },
                        "description": "Equal to this value."
                    },
                    {
                        "name": "query_relevance_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than this value.",
                            "title": "Query Relevance Gt"
                        },
                        "description": "Greater than this value."
                    },
                    {
                        "name": "query_relevance_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than or equal to this value.",
                            "title": "Query Relevance Gte"
                        },
                        "description": "Greater than or equal to this value."
                    },
                    {
                        "name": "query_relevance_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than this value.",
                            "title": "Query Relevance Lt"
                        },
                        "description": "Less than this value."
                    },
                    {
                        "name": "query_relevance_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than or equal to this value.",
                            "title": "Query Relevance Lte"
                        },
                        "description": "Less than or equal to this value."
                    },
                    {
                        "name": "response_relevance_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Equal to this value.",
                            "title": "Response Relevance Eq"
                        },
                        "description": "Equal to this value."
                    },
                    {
                        "name": "response_relevance_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than this value.",
                            "title": "Response Relevance Gt"
                        },
                        "description": "Greater than this value."
                    },
                    {
                        "name": "response_relevance_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Greater than or equal to this value.",
                            "title": "Response Relevance Gte"
                        },
                        "description": "Greater than or equal to this value."
                    },
                    {
                        "name": "response_relevance_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than this value.",
                            "title": "Response Relevance Lt"
                        },
                        "description": "Less than this value."
                    },
                    {
                        "name": "response_relevance_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1,
                            "minimum": 0,
                            "description": "Less than or equal to this value.",
                            "title": "Response Relevance Lte"
                        },
                        "description": "Less than or equal to this value."
                    },
                    {
                        "name": "tool_selection",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ToolClassEnum",
                            "description": "Tool selection evaluation result."
                        },
                        "description": "Tool selection evaluation result."
                    },
                    {
                        "name": "tool_usage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ToolClassEnum",
                            "description": "Tool usage evaluation result."
                        },
                        "description": "Tool usage evaluation result."
                    },
                    {
                        "name": "trace_duration_eq",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration exactly equal to this value (seconds).",
                            "title": "Trace Duration Eq"
                        },
                        "description": "Duration exactly equal to this value (seconds)."
                    },
                    {
                        "name": "trace_duration_gt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration greater than this value (seconds).",
                            "title": "Trace Duration Gt"
                        },
                        "description": "Duration greater than this value (seconds)."
                    },
                    {
                        "name": "trace_duration_gte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration greater than or equal to this value (seconds).",
                            "title": "Trace Duration Gte"
                        },
                        "description": "Duration greater than or equal to this value (seconds)."
                    },
                    {
                        "name": "trace_duration_lt",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration less than this value (seconds).",
                            "title": "Trace Duration Lt"
                        },
                        "description": "Duration less than this value (seconds)."
                    },
                    {
                        "name": "trace_duration_lte",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Duration less than or equal to this value (seconds).",
                            "title": "Trace Duration Lte"
                        },
                        "description": "Duration less than or equal to this value (seconds)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryTracesWithMetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/spans/query": {
            "get": {
                "tags": [
                    "Spans"
                ],
                "summary": "Query Spans By Type",
                "description": "Query spans filtered by span type. Task IDs are required. Returns spans with any existing metrics but does not compute new ones.",
                "operationId": "query_spans_by_type_v1_spans_query_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "task_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "description": "Task IDs to filter on. At least one is required.",
                            "title": "Task Ids"
                        },
                        "description": "Task IDs to filter on. At least one is required."
                    },
                    {
                        "name": "span_types",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN",
                            "title": "Span Types"
                        },
                        "description": "Span types to filter on. Optional. Valid values: AGENT, CHAIN, EMBEDDING, EVALUATOR, GUARDRAIL, LLM, RERANKER, RETRIEVER, TOOL, UNKNOWN"
                    },
                    {
                        "name": "start_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC).",
                            "title": "Start Time"
                        },
                        "description": "Inclusive start date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC).",
                            "title": "End Time"
                        },
                        "description": "Exclusive end date in ISO8601 string format. Use local time (not UTC)."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuerySpansResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid span types, parameters, or validation error"
                    },
                    "404": {
                        "description": "No spans found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/span/{span_id}/metrics": {
            "get": {
                "tags": [
                    "Spans"
                ],
                "summary": "Compute Metrics for Span",
                "description": "Compute metrics for a single span. Validates that the span is an LLM span.",
                "operationId": "compute_span_metrics_v1_span__span_id__metrics_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "span_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Span Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpanWithMetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create User",
                "description": "Creates a new user with specific roles. The available roles are TASK-ADMIN and CHAT-USER. The 'temporary' field is for indicating if the user password needs to be reset at the first login.",
                "operationId": "create_user_users_post",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Search Users",
                "description": "Fetch users.",
                "operationId": "search_users_users_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_string",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Substring to match on. Will search first name, last name, email.",
                            "title": "Search String"
                        },
                        "description": "Substring to match on. Will search first name, last name, email."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PaginationSortMethod",
                            "description": "Sort the results (asc/desc)",
                            "default": "desc"
                        },
                        "description": "Sort the results (asc/desc)"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page size. Default is 10. Must be greater than 0 and less than 5000.",
                            "default": 10,
                            "title": "Page Size"
                        },
                        "description": "Page size. Default is 10. Must be greater than 0 and less than 5000."
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Page number",
                            "default": 0,
                            "title": "Page"
                        },
                        "description": "Page number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResponse"
                                    },
                                    "title": "Response Search Users Users Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/permissions/check": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Check User Permission",
                "description": "Checks if the current user has the requested permission. Returns 200 status code for authorized or 403 if not.",
                "operationId": "check_user_permission_users_permissions_check_get",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/UserPermissionAction",
                            "description": "Action to check permissions of."
                        },
                        "description": "Action to check permissions of."
                    },
                    {
                        "name": "resource",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/UserPermissionResource",
                            "description": "Resource to check permissions of."
                        },
                        "description": "Resource to check permissions of."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete User",
                "description": "Delete a user.",
                "operationId": "delete_user_users__user_id__delete",
                "security": [
                    {
                        "API Key": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "User id, not email.",
                            "title": "User Id"
                        },
                        "description": "User id, not email."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/reset_password": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Reset User Password",
                "description": "Reset password for user.",
                "operationId": "reset_user_password_users__user_id__reset_password_post",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/files": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Upload Embeddings File",
                "description": "Upload files via form-data. Only PDF, CSV, TXT types accepted.",
                "operationId": "upload_embeddings_file_api_chat_files_post",
                "parameters": [
                    {
                        "name": "is_global",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "title": "Is Global"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_embeddings_file_api_chat_files_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Files",
                "description": "List uploaded files. Only files that are global or owned by the caller are returned.",
                "operationId": "get_files_api_chat_files_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExternalDocument"
                                    },
                                    "title": "Response Get Files Api Chat Files Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/files/{file_id}": {
            "delete": {
                "tags": [
                    "Chat"
                ],
                "summary": "Delete File",
                "description": "Remove a file by ID. This action cannot be undone.",
                "operationId": "delete_file_api_chat_files__file_id__delete",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "File Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat",
                "description": "Chat request for Arthur Chat",
                "operationId": "chat_request",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/context/{inference_id}": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Inference Document Context",
                "description": "Get document context used for a past inference ID.",
                "operationId": "get_inference_document_context_api_chat_context__inference_id__get",
                "parameters": [
                    {
                        "name": "inference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Inference Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChatDocumentContext"
                                    },
                                    "title": "Response Get Inference Document Context Api Chat Context  Inference Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/feedback/{inference_id}": {
            "post": {
                "tags": [
                    "Chat",
                    "Chat"
                ],
                "summary": "Post Chat Feedback",
                "description": "Post feedback for Arthur Chat.",
                "operationId": "post_chat_feedback_api_chat_feedback__inference_id__post",
                "parameters": [
                    {
                        "name": "inference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Inference Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/conversations": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Conversations",
                "description": "Get list of conversation IDs.",
                "operationId": "get_conversations_api_chat_conversations_get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "default": 50,
                            "title": "Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page_List_ConversationBaseResponse__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/default_task": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get Default Task",
                "description": "Get the default task for Arthur Chat.",
                "operationId": "get_default_task_api_chat_default_task_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatDefaultTaskResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Chat"
                ],
                "summary": "Update Default Task",
                "description": "Update the default task for Arthur Chat.",
                "operationId": "update_default_task_api_chat_default_task_put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatDefaultTaskRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatDefaultTaskResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIKeysRolesEnum": {
                "type": "string",
                "enum": [
                    "DEFAULT-RULE-ADMIN",
                    "TASK-ADMIN",
                    "VALIDATION-USER",
                    "ORG-AUDITOR",
                    "ORG-ADMIN"
                ],
                "title": "APIKeysRolesEnum"
            },
            "ApiKeyResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "ID of the key"
                    },
                    "key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key",
                        "description": "The generated GenAI Engine API key. The key is displayed on key creation request only."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the API key"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Status of the key."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation time of the key"
                    },
                    "deactivated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deactivated At",
                        "description": "Deactivation time of the key"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message",
                        "description": "Optional Message"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Roles",
                        "description": "Roles of the API key",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "is_active",
                    "created_at"
                ],
                "title": "ApiKeyResponse"
            },
            "AuthUserRole": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "composite": {
                        "type": "boolean",
                        "title": "Composite"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "composite"
                ],
                "title": "AuthUserRole"
            },
            "BaseDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "BaseDetailsResponse"
            },
            "Body_upload_embeddings_file_api_chat_files_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_embeddings_file_api_chat_files_post"
            },
            "ChatDefaultTaskRequest": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    }
                },
                "type": "object",
                "required": [
                    "task_id"
                ],
                "title": "ChatDefaultTaskRequest"
            },
            "ChatDefaultTaskResponse": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    }
                },
                "type": "object",
                "required": [
                    "task_id"
                ],
                "title": "ChatDefaultTaskResponse"
            },
            "ChatDocumentContext": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "seq_num": {
                        "type": "integer",
                        "title": "Seq Num"
                    },
                    "context": {
                        "type": "string",
                        "title": "Context"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "seq_num",
                    "context"
                ],
                "title": "ChatDocumentContext"
            },
            "ChatRequest": {
                "properties": {
                    "user_prompt": {
                        "type": "string",
                        "title": "User Prompt",
                        "description": "Prompt user wants to send to chat."
                    },
                    "conversation_id": {
                        "type": "string",
                        "title": "Conversation Id",
                        "description": "Conversation ID"
                    },
                    "file_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "File Ids",
                        "description": "list of file IDs to retrieve from during chat."
                    }
                },
                "type": "object",
                "required": [
                    "user_prompt",
                    "conversation_id",
                    "file_ids"
                ],
                "title": "ChatRequest"
            },
            "ChatResponse": {
                "properties": {
                    "inference_id": {
                        "type": "string",
                        "title": "Inference Id",
                        "description": "ID of the inference sent to the chat"
                    },
                    "conversation_id": {
                        "type": "string",
                        "title": "Conversation Id",
                        "description": "ID of the conversation session"
                    },
                    "timestamp": {
                        "type": "integer",
                        "title": "Timestamp",
                        "description": "Time the inference was made in unix milliseconds"
                    },
                    "retrieved_context": {
                        "items": {
                            "$ref": "#/components/schemas/ChatDocumentContext"
                        },
                        "type": "array",
                        "title": "Retrieved Context",
                        "description": "related sections of documents that were most relevant to the inference prompt. Formatted as a list of retrieved context chunks which include document name, seq num, and context."
                    },
                    "llm_response": {
                        "type": "string",
                        "title": "Llm Response",
                        "description": "response from the LLM for the original user prompt"
                    },
                    "prompt_results": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalRuleResult"
                        },
                        "type": "array",
                        "title": "Prompt Results",
                        "description": "list of rule results for the user prompt"
                    },
                    "response_results": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalRuleResult"
                        },
                        "type": "array",
                        "title": "Response Results",
                        "description": "list of rule results for the llm response"
                    }
                },
                "type": "object",
                "required": [
                    "inference_id",
                    "conversation_id",
                    "timestamp",
                    "retrieved_context",
                    "llm_response",
                    "prompt_results",
                    "response_results"
                ],
                "title": "ChatResponse"
            },
            "ConversationBaseResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "updated_at"
                ],
                "title": "ConversationBaseResponse"
            },
            "CreateUserRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "temporary": {
                        "type": "boolean",
                        "title": "Temporary",
                        "default": true
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Roles"
                    },
                    "firstName": {
                        "type": "string",
                        "title": "Firstname"
                    },
                    "lastName": {
                        "type": "string",
                        "title": "Lastname"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "roles",
                    "firstName",
                    "lastName"
                ],
                "title": "CreateUserRequest"
            },
            "ExampleConfig": {
                "properties": {
                    "example": {
                        "type": "string",
                        "title": "Example",
                        "description": "Custom example for the sensitive data"
                    },
                    "result": {
                        "type": "boolean",
                        "title": "Result",
                        "description": "Boolean value representing if the example passes or fails the the sensitive data rule "
                    }
                },
                "type": "object",
                "required": [
                    "example",
                    "result"
                ],
                "title": "ExampleConfig",
                "example": {
                    "example": "John has O negative blood group",
                    "result": true
                }
            },
            "ExamplesConfig": {
                "properties": {
                    "examples": {
                        "items": {
                            "$ref": "#/components/schemas/ExampleConfig"
                        },
                        "type": "array",
                        "title": "Examples",
                        "description": "List of all the examples for Sensitive Data Rule"
                    },
                    "hint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hint",
                        "description": "Optional. Hint added to describe what Sensitive Data Rule should be checking for"
                    }
                },
                "type": "object",
                "required": [
                    "examples"
                ],
                "title": "ExamplesConfig",
                "example": {
                    "examples": [
                        {
                            "example": "John has O negative blood group",
                            "result": true
                        },
                        {
                            "example": "Most of the people have A positive blood group",
                            "result": false
                        }
                    ],
                    "hint": "specific individual's blood type"
                }
            },
            "ExternalDocument": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "owner_id": {
                        "type": "string",
                        "title": "Owner Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type",
                    "owner_id"
                ],
                "title": "ExternalDocument"
            },
            "ExternalInference": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "result": {
                        "$ref": "#/components/schemas/RuleResultEnum"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "task_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Name"
                    },
                    "conversation_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation Id"
                    },
                    "inference_prompt": {
                        "$ref": "#/components/schemas/ExternalInferencePrompt"
                    },
                    "inference_response": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ExternalInferenceResponse"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "inference_feedback": {
                        "items": {
                            "$ref": "#/components/schemas/InferenceFeedbackResponse"
                        },
                        "type": "array",
                        "title": "Inference Feedback"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "result",
                    "created_at",
                    "updated_at",
                    "inference_prompt",
                    "inference_feedback"
                ],
                "title": "ExternalInference"
            },
            "ExternalInferencePrompt": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "inference_id": {
                        "type": "string",
                        "title": "Inference Id"
                    },
                    "result": {
                        "$ref": "#/components/schemas/RuleResultEnum"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "prompt_rule_results": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalRuleResult"
                        },
                        "type": "array",
                        "title": "Prompt Rule Results"
                    },
                    "tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "inference_id",
                    "result",
                    "created_at",
                    "updated_at",
                    "message",
                    "prompt_rule_results"
                ],
                "title": "ExternalInferencePrompt"
            },
            "ExternalInferenceResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "inference_id": {
                        "type": "string",
                        "title": "Inference Id"
                    },
                    "result": {
                        "$ref": "#/components/schemas/RuleResultEnum"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "context": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Context"
                    },
                    "response_rule_results": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalRuleResult"
                        },
                        "type": "array",
                        "title": "Response Rule Results"
                    },
                    "tokens": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tokens"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "inference_id",
                    "result",
                    "created_at",
                    "updated_at",
                    "message",
                    "response_rule_results"
                ],
                "title": "ExternalInferenceResponse"
            },
            "ExternalRuleResult": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": " ID of the rule"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the rule"
                    },
                    "rule_type": {
                        "$ref": "#/components/schemas/RuleType",
                        "description": "Type of the rule"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/RuleScope",
                        "description": "Scope of the rule. The rule can be set at default level or task level."
                    },
                    "result": {
                        "$ref": "#/components/schemas/RuleResultEnum",
                        "description": "Result if the rule"
                    },
                    "latency_ms": {
                        "type": "integer",
                        "title": "Latency Ms",
                        "description": "Duration in millisesconds of rule execution"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/KeywordDetailsResponse"
                            },
                            {
                                "$ref": "#/components/schemas/RegexDetailsResponse"
                            },
                            {
                                "$ref": "#/components/schemas/HallucinationDetailsResponse"
                            },
                            {
                                "$ref": "#/components/schemas/PIIDetailsResponse"
                            },
                            {
                                "$ref": "#/components/schemas/ToxicityDetailsResponse"
                            },
                            {
                                "$ref": "#/components/schemas/BaseDetailsResponse"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "Details of the rule output"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "rule_type",
                    "scope",
                    "result",
                    "latency_ms"
                ],
                "title": "ExternalRuleResult",
                "example": {
                    "id": "90f18c69-d793-4913-9bde-a0c7f3643de0",
                    "name": "PII Rule",
                    "result": "Pass"
                }
            },
            "FeedbackRequest": {
                "properties": {
                    "target": {
                        "$ref": "#/components/schemas/InferenceFeedbackTarget"
                    },
                    "score": {
                        "type": "integer",
                        "title": "Score"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "target",
                    "score",
                    "reason"
                ],
                "title": "FeedbackRequest"
            },
            "FileUploadResult": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "word_count": {
                        "type": "integer",
                        "title": "Word Count"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type",
                    "word_count",
                    "success"
                ],
                "title": "FileUploadResult"
            },
            "HTTPError": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "HTTPError",
                "example": {
                    "detail": "HTTPException raised."
                }
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HallucinationClaimResponse": {
                "properties": {
                    "claim": {
                        "type": "string",
                        "title": "Claim"
                    },
                    "valid": {
                        "type": "boolean",
                        "title": "Valid"
                    },
                    "reason": {
                        "type": "string",
                        "title": "Reason"
                    },
                    "order_number": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Order Number",
                        "description": "This field is a helper for ordering the claims",
                        "default": -1
                    }
                },
                "type": "object",
                "required": [
                    "claim",
                    "valid",
                    "reason"
                ],
                "title": "HallucinationClaimResponse"
            },
            "HallucinationDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "claims": {
                        "items": {
                            "$ref": "#/components/schemas/HallucinationClaimResponse"
                        },
                        "type": "array",
                        "title": "Claims"
                    }
                },
                "type": "object",
                "required": [
                    "claims"
                ],
                "title": "HallucinationDetailsResponse"
            },
            "InferenceFeedbackResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "inference_id": {
                        "type": "string",
                        "title": "Inference Id"
                    },
                    "target": {
                        "$ref": "#/components/schemas/InferenceFeedbackTarget"
                    },
                    "score": {
                        "type": "integer",
                        "title": "Score"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "inference_id",
                    "target",
                    "score",
                    "created_at",
                    "updated_at"
                ],
                "title": "InferenceFeedbackResponse"
            },
            "InferenceFeedbackTarget": {
                "type": "string",
                "enum": [
                    "context",
                    "response_results",
                    "prompt_results"
                ],
                "title": "InferenceFeedbackTarget"
            },
            "KeywordDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "keyword_matches": {
                        "items": {
                            "$ref": "#/components/schemas/KeywordSpanResponse"
                        },
                        "type": "array",
                        "title": "Keyword Matches",
                        "description": "Each keyword in this list corresponds to a keyword that was both configured in the rule that was run and found in the input text.",
                        "default": []
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "KeywordDetailsResponse"
            },
            "KeywordSpanResponse": {
                "properties": {
                    "keyword": {
                        "type": "string",
                        "title": "Keyword",
                        "description": "The keyword from the rule that matched within the input string."
                    }
                },
                "type": "object",
                "required": [
                    "keyword"
                ],
                "title": "KeywordSpanResponse"
            },
            "KeywordsConfig": {
                "properties": {
                    "keywords": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Keywords",
                        "description": "List of Keywords"
                    }
                },
                "type": "object",
                "required": [
                    "keywords"
                ],
                "title": "KeywordsConfig",
                "example": {
                    "keywords": [
                        "Blocked_Keyword_1",
                        "Blocked_Keyword_2"
                    ]
                }
            },
            "MetricResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "ID of the Metric"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the Metric"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MetricType",
                        "description": "Type of the Metric"
                    },
                    "metric_metadata": {
                        "type": "string",
                        "title": "Metric Metadata",
                        "description": "Metadata of the Metric"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config",
                        "description": "JSON-serialized configuration for the Metric"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Time the Metric was created in unix milliseconds"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Time the Metric was updated in unix milliseconds"
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Whether the Metric is enabled"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type",
                    "metric_metadata",
                    "created_at",
                    "updated_at"
                ],
                "title": "MetricResponse"
            },
            "MetricResultResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "ID of the metric result"
                    },
                    "metric_type": {
                        "$ref": "#/components/schemas/MetricType",
                        "description": "Type of the metric"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "JSON-serialized metric details"
                    },
                    "prompt_tokens": {
                        "type": "integer",
                        "title": "Prompt Tokens",
                        "description": "Number of prompt tokens used"
                    },
                    "completion_tokens": {
                        "type": "integer",
                        "title": "Completion Tokens",
                        "description": "Number of completion tokens used"
                    },
                    "latency_ms": {
                        "type": "integer",
                        "title": "Latency Ms",
                        "description": "Latency in milliseconds"
                    },
                    "span_id": {
                        "type": "string",
                        "title": "Span Id",
                        "description": "ID of the span this result belongs to"
                    },
                    "metric_id": {
                        "type": "string",
                        "title": "Metric Id",
                        "description": "ID of the metric that generated this result"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Time the result was created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Time the result was last updated"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "metric_type",
                    "prompt_tokens",
                    "completion_tokens",
                    "latency_ms",
                    "span_id",
                    "metric_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "MetricResultResponse"
            },
            "MetricType": {
                "type": "string",
                "enum": [
                    "QueryRelevance",
                    "ResponseRelevance",
                    "ToolSelection"
                ],
                "title": "MetricType"
            },
            "NestedSpanWithMetricsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id"
                    },
                    "span_id": {
                        "type": "string",
                        "title": "Span Id"
                    },
                    "parent_span_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Span Id"
                    },
                    "span_kind": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Span Kind"
                    },
                    "span_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Span Name"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Time"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "raw_data": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Raw Data"
                    },
                    "system_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "System Prompt"
                    },
                    "user_query": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Query"
                    },
                    "response": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response"
                    },
                    "context": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Context"
                    },
                    "metric_results": {
                        "items": {
                            "$ref": "#/components/schemas/MetricResultResponse"
                        },
                        "type": "array",
                        "title": "Metric Results",
                        "description": "List of metric results for this span",
                        "default": []
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/NestedSpanWithMetricsResponse"
                        },
                        "type": "array",
                        "title": "Children",
                        "description": "Child spans nested under this span",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "trace_id",
                    "span_id",
                    "start_time",
                    "end_time",
                    "created_at",
                    "updated_at",
                    "raw_data"
                ],
                "title": "NestedSpanWithMetricsResponse",
                "description": "Nested span response with children for building span trees"
            },
            "NewApiKeyRequest": {
                "properties": {
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the API key. Optional."
                    },
                    "roles": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/APIKeysRolesEnum"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roles",
                        "description": "Role that will be assigned to API key. Allowed values: [<APIKeysRolesEnum.DEFAULT_RULE_ADMIN: 'DEFAULT-RULE-ADMIN'>, <APIKeysRolesEnum.TASK_ADMIN: 'TASK-ADMIN'>, <APIKeysRolesEnum.VALIDATION_USER: 'VALIDATION-USER'>, <APIKeysRolesEnum.ORG_AUDITOR: 'ORG-AUDITOR'>, <APIKeysRolesEnum.ORG_ADMIN: 'ORG-ADMIN'>]",
                        "default": [
                            "VALIDATION-USER"
                        ]
                    }
                },
                "type": "object",
                "title": "NewApiKeyRequest"
            },
            "NewMetricRequest": {
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/MetricType",
                        "description": "Type of the metric. It can only be one of QueryRelevance, ResponseRelevance, ToolSelection",
                        "examples": [
                            "UserQueryRelevance"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of metric",
                        "examples": [
                            "My User Query Relevance"
                        ]
                    },
                    "metric_metadata": {
                        "type": "string",
                        "title": "Metric Metadata",
                        "description": "Additional metadata for the metric"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RelevanceMetricConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Configuration for the metric. Currently only applies to UserQueryRelevance and ResponseRelevance metric types."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "name",
                    "metric_metadata"
                ],
                "title": "NewMetricRequest",
                "example1": {
                    "metric_metadata": "This is a test metric metadata",
                    "name": "My User Query Relevance",
                    "type": "QueryRelevance"
                },
                "example2": {
                    "config": {
                        "relevance_threshold": 0.8,
                        "use_llm_judge": false
                    },
                    "metric_metadata": "This is a test metric metadata",
                    "name": "My User Query Relevance with Config",
                    "type": "QueryRelevance"
                },
                "example3": {
                    "config": {
                        "use_llm_judge": true
                    },
                    "metric_metadata": "This is a test metric metadata",
                    "name": "My Response Relevance",
                    "type": "ResponseRelevance"
                }
            },
            "NewRuleRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the rule",
                        "examples": [
                            "SSN Regex Rule"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of the rule. It can only be one of KeywordRule, RegexRule, ModelSensitiveDataRule, ModelHallucinationRule, ModelHallucinationRuleV2, PromptInjectionRule, PIIDataRule",
                        "examples": [
                            "RegexRule"
                        ]
                    },
                    "apply_to_prompt": {
                        "type": "boolean",
                        "title": "Apply To Prompt",
                        "description": "Boolean value to enable or disable the rule for llm prompt",
                        "examples": [
                            true
                        ]
                    },
                    "apply_to_response": {
                        "type": "boolean",
                        "title": "Apply To Response",
                        "description": "Boolean value to enable or disable the rule for llm response",
                        "examples": [
                            false
                        ]
                    },
                    "config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RegexConfig"
                            },
                            {
                                "$ref": "#/components/schemas/KeywordsConfig"
                            },
                            {
                                "$ref": "#/components/schemas/ToxicityConfig"
                            },
                            {
                                "$ref": "#/components/schemas/PIIConfig"
                            },
                            {
                                "$ref": "#/components/schemas/ExamplesConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config",
                        "description": "Config for the rule"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "apply_to_prompt",
                    "apply_to_response"
                ],
                "title": "NewRuleRequest",
                "example1": {
                    "description": "Sensitive Data Example with its required configuration",
                    "summary": "Sensitive Data Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": false,
                        "config": {
                            "examples": [
                                {
                                    "example": "John has O negative blood group",
                                    "result": true
                                },
                                {
                                    "example": "Most of the people have A positive blood group",
                                    "result": false
                                }
                            ],
                            "hint": "specific individual's blood types"
                        },
                        "name": "Sensitive Data Rule",
                        "type": "ModelSensitiveDataRule"
                    }
                },
                "example2": {
                    "description": "Regex Example with its required configuration. Be sure to properly encode requests using JSON libraries. For example, the regex provided encodes to a different string when encoded to account for escape characters.",
                    "summary": "Regex Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": true,
                        "config": {
                            "regex_patterns": [
                                "\\d{3}-\\d{2}-\\d{4}",
                                "\\d{5}-\\d{6}-\\d{7}"
                            ]
                        },
                        "name": "SSN Regex Rule",
                        "type": "RegexRule"
                    }
                },
                "example3": {
                    "description": "Keywords Rule Example with its required configuration",
                    "summary": "Keywords Rule Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": true,
                        "config": {
                            "keywords": [
                                "Blocked_Keyword_1",
                                "Blocked_Keyword_2"
                            ]
                        },
                        "name": "Blocked Keywords Rule",
                        "type": "KeywordRule"
                    }
                },
                "example4": {
                    "description": "Prompt Injection Rule Example, no configuration required",
                    "summary": "Prompt Injection Rule Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": false,
                        "name": "Prompt Injection Rule",
                        "type": "PromptInjectionRule"
                    }
                },
                "example5": {
                    "description": "Hallucination Rule Example, no configuration required (This rule is deprecated. Use ModelHallucinationRuleV2 instead.)",
                    "summary": "Hallucination Rule V1 Example (Deprecated)",
                    "value": {
                        "apply_to_prompt": false,
                        "apply_to_response": true,
                        "name": "Hallucination Rule",
                        "type": "ModelHallucinationRule"
                    }
                },
                "example6": {
                    "description": "Hallucination Rule Example, no configuration required",
                    "summary": "Hallucination Rule V2 Example",
                    "value": {
                        "apply_to_prompt": false,
                        "apply_to_response": true,
                        "name": "Hallucination Rule",
                        "type": "ModelHallucinationRuleV2"
                    }
                },
                "example7": {
                    "description": "Hallucination Rule Example, no configuration required. This rule is in beta and must be enabled by the system administrator.",
                    "summary": "Hallucination Rule V3 Example (Beta)",
                    "value": {
                        "apply_to_prompt": false,
                        "apply_to_response": true,
                        "name": "Hallucination Rule",
                        "type": "ModelHallucinationRuleV3"
                    }
                },
                "example8": {
                    "description": "PII Rule Example, no configuration required. \"disabled_pii_entities\", \"confidence_threshold\", and \"allow_list\" accepted. Valid value for \"confidence_threshold\" is 0.0-1.0. Valid values for \"disabled_pii_entities\" are CREDIT_CARD,CRYPTO,DATE_TIME,EMAIL_ADDRESS,IBAN_CODE,IP_ADDRESS,NRP,LOCATION,PERSON,PHONE_NUMBER,MEDICAL_LICENSE,URL,US_BANK_NUMBER,US_DRIVER_LICENSE,US_ITIN,US_PASSPORT,US_SSN",
                    "summary": "PII Rule Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": true,
                        "config": {
                            "allow_list": [
                                "arthur.ai",
                                "Arthur"
                            ],
                            "confidence_threshold": "0.5",
                            "disabled_pii_entities": [
                                "EMAIL_ADDRESS",
                                "PHONE_NUMBER"
                            ]
                        },
                        "name": "PII Rule",
                        "type": "PIIDataRule"
                    }
                },
                "example9": {
                    "description": "Toxicity Rule Example, no configuration required. Threshold accepted",
                    "summary": "Toxicity Rule Example",
                    "value": {
                        "apply_to_prompt": true,
                        "apply_to_response": true,
                        "config": {
                            "threshold": 0.5
                        },
                        "name": "Toxicity Rule",
                        "type": "ToxicityRule"
                    }
                }
            },
            "NewTaskRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the task."
                    },
                    "is_agentic": {
                        "type": "boolean",
                        "title": "Is Agentic",
                        "description": "Whether the task is agentic or not.",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "NewTaskRequest"
            },
            "PIIConfig": {
                "properties": {
                    "disabled_pii_entities": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Disabled Pii Entities",
                        "description": "Optional. List of PII entities to disable. Valid values are: CREDIT_CARD,CRYPTO,DATE_TIME,EMAIL_ADDRESS,IBAN_CODE,IP_ADDRESS,NRP,LOCATION,PERSON,PHONE_NUMBER,MEDICAL_LICENSE,URL,US_BANK_NUMBER,US_DRIVER_LICENSE,US_ITIN,US_PASSPORT,US_SSN"
                    },
                    "confidence_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence Threshold",
                        "description": "Optional. Float (0, 1) indicating the level of tolerable PII to consider the rule passed or failed. Min: 0 (less confident) Max: 1 (very confident). Default: 0",
                        "default": 0,
                        "deprecated": true
                    },
                    "allow_list": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Allow List",
                        "description": "Optional. List of strings to pass PII validation."
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "PIIConfig",
                "example": {
                    "allow_list": [
                        "arthur.ai",
                        "Arthur"
                    ],
                    "confidence_threshold": "0.5",
                    "disabled_pii_entities": [
                        "PERSON",
                        "URL"
                    ]
                }
            },
            "PIIDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "pii_entities": {
                        "items": {
                            "$ref": "#/components/schemas/PIIEntitySpanResponse"
                        },
                        "type": "array",
                        "title": "Pii Entities"
                    }
                },
                "type": "object",
                "required": [
                    "pii_entities"
                ],
                "title": "PIIDetailsResponse"
            },
            "PIIEntitySpanResponse": {
                "properties": {
                    "entity": {
                        "$ref": "#/components/schemas/PIIEntityTypes"
                    },
                    "span": {
                        "type": "string",
                        "title": "Span",
                        "description": "The subtext within the input string that was identified as PII."
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence",
                        "description": "Float value representing the confidence score of a given PII identification."
                    }
                },
                "type": "object",
                "required": [
                    "entity",
                    "span"
                ],
                "title": "PIIEntitySpanResponse"
            },
            "PIIEntityTypes": {
                "type": "string",
                "enum": [
                    "CREDIT_CARD",
                    "CRYPTO",
                    "DATE_TIME",
                    "EMAIL_ADDRESS",
                    "IBAN_CODE",
                    "IP_ADDRESS",
                    "NRP",
                    "LOCATION",
                    "PERSON",
                    "PHONE_NUMBER",
                    "MEDICAL_LICENSE",
                    "URL",
                    "US_BANK_NUMBER",
                    "US_DRIVER_LICENSE",
                    "US_ITIN",
                    "US_PASSPORT",
                    "US_SSN"
                ],
                "title": "PIIEntityTypes"
            },
            "Page_List_ConversationBaseResponse__": {
                "properties": {
                    "items": {
                        "items": {
                            "items": {
                                "$ref": "#/components/schemas/ConversationBaseResponse"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Page"
                    },
                    "size": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Size"
                    },
                    "pages": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Pages"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "page",
                    "size",
                    "pages"
                ],
                "title": "Page[List[ConversationBaseResponse]]"
            },
            "PaginationSortMethod": {
                "type": "string",
                "enum": [
                    "asc",
                    "desc"
                ],
                "title": "PaginationSortMethod"
            },
            "PasswordResetRequest": {
                "properties": {
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "password"
                ],
                "title": "PasswordResetRequest"
            },
            "PromptValidationRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt",
                        "description": "Prompt to be validated by GenAI Engine"
                    },
                    "conversation_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conversation Id",
                        "description": "The unique conversation ID this prompt belongs to. All prompts and responses from this         conversation can later be reconstructed with this ID."
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "The user ID this prompt belongs to"
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "PromptValidationRequest"
            },
            "QueryFeedbackResponse": {
                "properties": {
                    "feedback": {
                        "items": {
                            "$ref": "#/components/schemas/InferenceFeedbackResponse"
                        },
                        "type": "array",
                        "title": "Feedback",
                        "description": "List of inferences matching the search filters. Length is less than or equal to page_size parameter"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "The current page number"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size",
                        "description": "The number of feedback items per page"
                    },
                    "total_pages": {
                        "type": "integer",
                        "title": "Total Pages",
                        "description": "The total number of pages"
                    },
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count",
                        "description": "The total number of feedback items matching the query parameters"
                    }
                },
                "type": "object",
                "required": [
                    "feedback",
                    "page",
                    "page_size",
                    "total_pages",
                    "total_count"
                ],
                "title": "QueryFeedbackResponse",
                "example": {
                    "feedback": [
                        {
                            "created_at": "2024-06-06T06:37:46.123-04:00",
                            "id": "90f18c69-d793-4913-9bde-a0c7f3643de0",
                            "inference_id": "81437d71-9557-4611-981b-9283d1c98643",
                            "reason": "good reason",
                            "score": "0",
                            "target": "context",
                            "updated_at": "2024-06-06T06:37:46.123-04:00",
                            "user_id": "user_1"
                        },
                        {
                            "created_at": "2023-05-05T05:26:35.987-04:00",
                            "id": "248381c2-543b-4de0-98cd-d7511fee6241",
                            "inference_id": "bcbc7ca0-4cfc-4f67-9cf8-26cb2291ba33",
                            "reason": "some reason",
                            "score": "1",
                            "target": "response_results",
                            "updated_at": "2023-05-05T05:26:35.987-04:00",
                            "user_id": "user_2"
                        }
                    ],
                    "page": 1,
                    "page_size": 10,
                    "total_count": 2,
                    "total_pages": 1
                }
            },
            "QueryInferencesResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "The total number of inferences matching the query parameters"
                    },
                    "inferences": {
                        "items": {
                            "$ref": "#/components/schemas/ExternalInference"
                        },
                        "type": "array",
                        "title": "Inferences",
                        "description": "List of inferences matching the search filters. Length is less than or equal to page_size parameter"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "inferences"
                ],
                "title": "QueryInferencesResponse",
                "example": {
                    "count": 1,
                    "inferences": [
                        {
                            "conversation_id": "957df309-c907-4b77-abe5-15dd00c08112",
                            "created_at": 1723204737120,
                            "id": "957df309-c907-4b77-abe5-15dd00c081f7",
                            "inference_feedback": [
                                {
                                    "created_at": "2024-08-09T12:08:34.847381",
                                    "id": "0d602e5c-4ae6-4fc9-a610-68a1d8928ad7",
                                    "inference_id": "957df309-c907-4b77-abe5-15dd00c081f7",
                                    "reason": "Perfect answer.",
                                    "score": 100,
                                    "target": "context",
                                    "updated_at": "2024-08-09T12:08:34.847386",
                                    "user_id": "957df309-2137-4b77-abe5-15dd00c081f8"
                                }
                            ],
                            "inference_prompt": {
                                "created_at": 1723204737121,
                                "id": "834f7ebd-cd6b-4691-9473-8bc350f8922c",
                                "inference_id": "957df309-c907-4b77-abe5-15dd00c081f7",
                                "message": "How many stars are in the solar system?",
                                "prompt_rule_results": [
                                    {
                                        "id": "bc599a56-2e31-4cb7-910d-9e5ed6455db2",
                                        "latency_ms": 73,
                                        "name": "My_PII_Rule",
                                        "result": "Pass",
                                        "rule_type": "PIIDataRule",
                                        "scope": "default"
                                    }
                                ],
                                "result": "Pass",
                                "tokens": 100,
                                "updated_at": 1723204737121
                            },
                            "inference_response": {
                                "context": "Solar system contains one star.",
                                "created_at": 1723204786599,
                                "id": "ec765a75-1479-4938-8e1c-6334b7deb8ce",
                                "inference_id": "957df309-c907-4b77-abe5-15dd00c081f7",
                                "message": "There is one star in solar system.",
                                "response_rule_results": [
                                    {
                                        "id": "a45267c5-96d9-4de2-a871-debf2c8fdb86",
                                        "latency_ms": 107,
                                        "name": "My_another_PII_Rule",
                                        "result": "Pass",
                                        "rule_type": "PIIDataRule",
                                        "scope": "default"
                                    },
                                    {
                                        "details": {
                                            "claims": [
                                                {
                                                    "claim": "There is one star in solar system.",
                                                    "order_number": 0,
                                                    "reason": "No hallucination detected!",
                                                    "valid": true
                                                }
                                            ],
                                            "message": "All claims were supported by the context!",
                                            "pii_entities": [],
                                            "pii_results": [],
                                            "score": true
                                        },
                                        "id": "92b7b46e-eaf2-4226-82d4-be12ceb3e4b7",
                                        "latency_ms": 700,
                                        "name": "My_Hallucination_Rule",
                                        "result": "Pass",
                                        "rule_type": "ModelHallucinationRuleV2",
                                        "scope": "default"
                                    }
                                ],
                                "result": "Pass",
                                "tokens": 100,
                                "updated_at": 1723204786599
                            },
                            "result": "Pass",
                            "task_id": "957df309-c907-4b77-abe5-15dd00c081f8",
                            "task_name": "My task name",
                            "updated_at": 1723204787050,
                            "user_id": "957df309-2137-4b77-abe5-15dd00c081f8"
                        }
                    ]
                }
            },
            "QuerySpansResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "The total number of spans matching the query parameters"
                    },
                    "spans": {
                        "items": {
                            "$ref": "#/components/schemas/SpanWithMetricsResponse"
                        },
                        "type": "array",
                        "title": "Spans",
                        "description": "List of spans with metrics matching the search filters"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "spans"
                ],
                "title": "QuerySpansResponse"
            },
            "QueryTracesWithMetricsResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "The total number of spans matching the query parameters"
                    },
                    "traces": {
                        "items": {
                            "$ref": "#/components/schemas/TraceResponse"
                        },
                        "type": "array",
                        "title": "Traces",
                        "description": "List of traces containing nested spans matching the search filters"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "traces"
                ],
                "title": "QueryTracesWithMetricsResponse",
                "description": "New response format that groups spans into traces with nested structure"
            },
            "RegexConfig": {
                "properties": {
                    "regex_patterns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Regex Patterns",
                        "description": "List of Regex patterns to be used for validation. Be sure to encode requests in JSON and account for escape characters."
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "regex_patterns"
                ],
                "title": "RegexConfig",
                "example": {
                    "regex_patterns": [
                        "\\d{3}-\\d{2}-\\d{4}",
                        "\\d{5}-\\d{6}-\\d{7}"
                    ]
                }
            },
            "RegexDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "regex_matches": {
                        "items": {
                            "$ref": "#/components/schemas/RegexSpanResponse"
                        },
                        "type": "array",
                        "title": "Regex Matches",
                        "description": "Each string in this list corresponds to a matching span from the input text that matches the configured regex rule.",
                        "default": []
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "RegexDetailsResponse"
            },
            "RegexSpanResponse": {
                "properties": {
                    "matching_text": {
                        "type": "string",
                        "title": "Matching Text",
                        "description": "The subtext within the input string that matched the regex rule."
                    },
                    "pattern": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pattern",
                        "description": "Pattern that yielded the match."
                    }
                },
                "type": "object",
                "required": [
                    "matching_text"
                ],
                "title": "RegexSpanResponse"
            },
            "RelevanceMetricConfig": {
                "properties": {
                    "relevance_threshold": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Relevance Threshold",
                        "description": "Threshold for determining relevance when not using LLM judge"
                    },
                    "use_llm_judge": {
                        "type": "boolean",
                        "title": "Use Llm Judge",
                        "description": "Whether to use LLM as a judge for relevance scoring",
                        "default": true
                    }
                },
                "type": "object",
                "title": "RelevanceMetricConfig",
                "description": "Configuration for relevance metrics including QueryRelevance and ResponseRelevance"
            },
            "ResponseValidationRequest": {
                "properties": {
                    "response": {
                        "type": "string",
                        "title": "Response",
                        "description": "LLM Response to be validated by GenAI Engine"
                    },
                    "context": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Context",
                        "description": "Optional data provided as context for the validation."
                    }
                },
                "type": "object",
                "required": [
                    "response"
                ],
                "title": "ResponseValidationRequest"
            },
            "RuleResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "ID of the Rule"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the Rule"
                    },
                    "type": {
                        "$ref": "#/components/schemas/RuleType",
                        "description": "Type of Rule"
                    },
                    "apply_to_prompt": {
                        "type": "boolean",
                        "title": "Apply To Prompt",
                        "description": "Rule applies to prompt"
                    },
                    "apply_to_response": {
                        "type": "boolean",
                        "title": "Apply To Response",
                        "description": "Rule applies to response"
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Rule is enabled for the task"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/RuleScope",
                        "description": "Scope of the rule. The rule can be set at default level or task level."
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Time the rule was created in unix milliseconds"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At",
                        "description": "Time the rule was updated in unix milliseconds"
                    },
                    "config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/KeywordsConfig"
                            },
                            {
                                "$ref": "#/components/schemas/RegexConfig"
                            },
                            {
                                "$ref": "#/components/schemas/ExamplesConfig"
                            },
                            {
                                "$ref": "#/components/schemas/ToxicityConfig"
                            },
                            {
                                "$ref": "#/components/schemas/PIIConfig"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Config",
                        "description": "Config of the rule"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "type",
                    "apply_to_prompt",
                    "apply_to_response",
                    "scope",
                    "created_at",
                    "updated_at"
                ],
                "title": "RuleResponse"
            },
            "RuleResultEnum": {
                "type": "string",
                "enum": [
                    "Pass",
                    "Fail",
                    "Skipped",
                    "Unavailable",
                    "Partially Unavailable",
                    "Model Not Available"
                ],
                "title": "RuleResultEnum"
            },
            "RuleScope": {
                "type": "string",
                "enum": [
                    "default",
                    "task"
                ],
                "title": "RuleScope"
            },
            "RuleType": {
                "type": "string",
                "enum": [
                    "KeywordRule",
                    "ModelHallucinationRuleV2",
                    "ModelSensitiveDataRule",
                    "PIIDataRule",
                    "PromptInjectionRule",
                    "RegexRule",
                    "ToxicityRule"
                ],
                "title": "RuleType"
            },
            "SearchRulesRequest": {
                "properties": {
                    "rule_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rule Ids",
                        "description": "List of rule IDs to search for."
                    },
                    "rule_scopes": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RuleScope"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rule Scopes",
                        "description": "List of rule scopes to search for."
                    },
                    "prompt_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt Enabled",
                        "description": "Include or exclude prompt-enabled rules."
                    },
                    "response_enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response Enabled",
                        "description": "Include or exclude response-enabled rules."
                    },
                    "rule_types": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RuleType"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rule Types",
                        "description": "List of rule types to search for."
                    }
                },
                "type": "object",
                "title": "SearchRulesRequest"
            },
            "SearchRulesResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "The total number of rules matching the parameters"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/components/schemas/RuleResponse"
                        },
                        "type": "array",
                        "title": "Rules",
                        "description": "List of rules matching the search filters. Length is less than or equal to page_size parameter"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "rules"
                ],
                "title": "SearchRulesResponse"
            },
            "SearchTasksRequest": {
                "properties": {
                    "task_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Ids",
                        "description": "List of tasks to query for."
                    },
                    "task_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Name",
                        "description": "Task name substring search string."
                    },
                    "is_agentic": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Agentic",
                        "description": "Filter tasks by agentic status. If not provided, returns both agentic and non-agentic tasks."
                    }
                },
                "type": "object",
                "title": "SearchTasksRequest"
            },
            "SearchTasksResponse": {
                "properties": {
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "The total number of tasks matching the parameters"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/TaskResponse"
                        },
                        "type": "array",
                        "title": "Tasks",
                        "description": "List of tasks matching the search filters. Length is less than or equal to page_size parameter"
                    }
                },
                "type": "object",
                "required": [
                    "count",
                    "tasks"
                ],
                "title": "SearchTasksResponse"
            },
            "SpanWithMetricsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id"
                    },
                    "span_id": {
                        "type": "string",
                        "title": "Span Id"
                    },
                    "parent_span_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Span Id"
                    },
                    "span_kind": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Span Kind"
                    },
                    "span_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Span Name"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Time"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "raw_data": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Raw Data"
                    },
                    "system_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "System Prompt"
                    },
                    "user_query": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Query"
                    },
                    "response": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response"
                    },
                    "context": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Context"
                    },
                    "metric_results": {
                        "items": {
                            "$ref": "#/components/schemas/MetricResultResponse"
                        },
                        "type": "array",
                        "title": "Metric Results",
                        "description": "List of metric results for this span",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "trace_id",
                    "span_id",
                    "start_time",
                    "end_time",
                    "created_at",
                    "updated_at",
                    "raw_data"
                ],
                "title": "SpanWithMetricsResponse"
            },
            "TaskResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": " ID of the task"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the task"
                    },
                    "created_at": {
                        "type": "integer",
                        "title": "Created At",
                        "description": "Time the task was created in unix milliseconds"
                    },
                    "updated_at": {
                        "type": "integer",
                        "title": "Updated At",
                        "description": "Time the task was created in unix milliseconds"
                    },
                    "is_agentic": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Agentic",
                        "description": "Whether the task is agentic or not"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/components/schemas/RuleResponse"
                        },
                        "type": "array",
                        "title": "Rules",
                        "description": "List of all the rules for the task."
                    },
                    "metrics": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MetricResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metrics",
                        "description": "List of all the metrics for the task."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at",
                    "rules"
                ],
                "title": "TaskResponse"
            },
            "TokenUsageCount": {
                "properties": {
                    "inference": {
                        "type": "integer",
                        "title": "Inference",
                        "description": "Number of inference tokens sent to Arthur."
                    },
                    "eval_prompt": {
                        "type": "integer",
                        "title": "Eval Prompt",
                        "description": "Number of Prompt tokens incurred by Arthur rules."
                    },
                    "eval_completion": {
                        "type": "integer",
                        "title": "Eval Completion",
                        "description": "Number of Completion tokens incurred by Arthur rules."
                    },
                    "user_input": {
                        "type": "integer",
                        "title": "User Input",
                        "description": "Number of user input tokens sent to Arthur. This field is deprecated and will be removed in the future. Use inference instead.",
                        "deprecated": true
                    },
                    "prompt": {
                        "type": "integer",
                        "title": "Prompt",
                        "description": "Number of Prompt tokens incurred by Arthur rules. This field is deprecated and will be removed in the future. Use eval_prompt instead.",
                        "deprecated": true
                    },
                    "completion": {
                        "type": "integer",
                        "title": "Completion",
                        "description": "Number of Completion tokens incurred by Arthur rules. This field is deprecated and will be removed in the future. Use eval_completion instead.",
                        "deprecated": true
                    }
                },
                "type": "object",
                "required": [
                    "inference",
                    "eval_prompt",
                    "eval_completion",
                    "user_input",
                    "prompt",
                    "completion"
                ],
                "title": "TokenUsageCount"
            },
            "TokenUsageResponse": {
                "properties": {
                    "rule_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rule Type"
                    },
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "count": {
                        "$ref": "#/components/schemas/TokenUsageCount"
                    }
                },
                "type": "object",
                "required": [
                    "count"
                ],
                "title": "TokenUsageResponse"
            },
            "TokenUsageScope": {
                "type": "string",
                "enum": [
                    "rule_type",
                    "task"
                ],
                "title": "TokenUsageScope"
            },
            "ToolClassEnum": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2
                ],
                "title": "ToolClassEnum"
            },
            "ToxicityConfig": {
                "properties": {
                    "threshold": {
                        "type": "number",
                        "title": "Threshold",
                        "description": "Optional. Float (0, 1) indicating the level of tolerable toxicity to consider the rule passed or failed. Min: 0 (no toxic language) Max: 1 (very toxic language). Default: 0.5",
                        "default": 0.5
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "ToxicityConfig",
                "example": {
                    "threshold": 0.5
                }
            },
            "ToxicityDetailsResponse": {
                "properties": {
                    "score": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Score"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    },
                    "toxicity_score": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Toxicity Score"
                    },
                    "toxicity_violation_type": {
                        "$ref": "#/components/schemas/ToxicityViolationType"
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "toxicity_violation_type"
                ],
                "title": "ToxicityDetailsResponse"
            },
            "ToxicityViolationType": {
                "type": "string",
                "enum": [
                    "benign",
                    "harmful_request",
                    "toxic_content",
                    "profanity",
                    "unknown"
                ],
                "title": "ToxicityViolationType"
            },
            "TraceResponse": {
                "properties": {
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id",
                        "description": "ID of the trace"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time",
                        "description": "Start time of the earliest span in this trace"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Time",
                        "description": "End time of the latest span in this trace"
                    },
                    "root_spans": {
                        "items": {
                            "$ref": "#/components/schemas/NestedSpanWithMetricsResponse"
                        },
                        "type": "array",
                        "title": "Root Spans",
                        "description": "Root spans (spans with no parent) in this trace, with children nested",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "trace_id",
                    "start_time",
                    "end_time"
                ],
                "title": "TraceResponse",
                "description": "Response model for a single trace containing nested spans"
            },
            "UpdateMetricRequest": {
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled",
                        "description": "Boolean value to enable or disable the metric. "
                    }
                },
                "type": "object",
                "required": [
                    "enabled"
                ],
                "title": "UpdateMetricRequest"
            },
            "UpdateRuleRequest": {
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled",
                        "description": "Boolean value to enable or disable the rule. "
                    }
                },
                "type": "object",
                "required": [
                    "enabled"
                ],
                "title": "UpdateRuleRequest"
            },
            "UserPermissionAction": {
                "type": "string",
                "enum": [
                    "create",
                    "read"
                ],
                "title": "UserPermissionAction"
            },
            "UserPermissionResource": {
                "type": "string",
                "enum": [
                    "prompts",
                    "responses",
                    "rules",
                    "tasks"
                ],
                "title": "UserPermissionResource"
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "first_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Name"
                    },
                    "last_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Name"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/AuthUserRole"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "roles"
                ],
                "title": "UserResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "ValidationResult": {
                "properties": {
                    "inference_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Inference Id",
                        "description": "ID of the inference"
                    },
                    "rule_results": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ExternalRuleResult"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rule Results",
                        "description": "List of rule results"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "The user ID this prompt belongs to"
                    }
                },
                "type": "object",
                "title": "ValidationResult",
                "example": {
                    "inference_id": "4dd1fae1-34b9-4aec-8abe-fe7bf12af31d",
                    "rule_results": [
                        {
                            "id": "90f18c69-d793-4913-9bde-a0c7f3643de0",
                            "name": "PII Check",
                            "result": "Pass"
                        },
                        {
                            "id": "946c4a44-b367-4229-84d4-1a8e461cb132",
                            "name": "Sensitive Data Check",
                            "result": "Pass"
                        }
                    ]
                }
            }
        },
        "securitySchemes": {
            "API Key": {
                "type": "http",
                "description": "Bearer token authentication with an API key",
                "scheme": "bearer"
            }
        }
    }
}