name: arthur-engine
services:
  db:
    image: postgres
    shm_size: 128mb
    ports:
      - "5435:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=changeme_pg_password
      - POSTGRES_DB=arthur_genai_engine
    volumes:
      - /var/lib/postgresql/data
    env_file:
      - .env
  genai-engine:
    # If you have GPUs, use `genai-engine-gpu` image instead
    image: arthurplatform/genai-engine-cpu:${GENAI_ENGINE_VERSION-latest}
    platform: linux/amd64
    depends_on:
      - db
    ports:
      - "3030:3030"
    environment:
      - POSTGRES_USER=postgres
      # Must match POSTGRES_PASSWORD in the db service
      - POSTGRES_PASSWORD=changeme_pg_password
      - POSTGRES_URL=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=arthur_genai_engine
      - POSTGRES_USE_SSL=false
      - ALLOW_ADMIN_KEY_GENERAL_ACCESS=enabled
      # The address you want to access the engine from (e.g. hostname, DNS)
      - GENAI_ENGINE_INGRESS_URI=http://localhost:3030
      - GENAI_ENGINE_ADMIN_KEY=changeme_genai_engine_admin_key
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "lsof", "-i", ":3030" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 300s
    entrypoint: [ "bash", "-c", "/app/src/docker-entrypoint.sh" ]
  ml-engine:
    image: arthurplatform/ml-engine:${ML_ENGINE_VERSION-latest}
    platform: linux/amd64
    restart: unless-stopped
    stop_grace_period: "60s"
    environment:
      # Must match GENAI_ENGINE_INGRESS_URI in the genai-engine service
      - GENAI_ENGINE_INTERNAL_INGRESS_HOST=http://localhost:3030
      # Must match GENAI_ENGINE_ADMIN_KEY in the genai-engine service
      - GENAI_ENGINE_INTERNAL_API_KEY=changeme_genai_engine_admin_key
      - GENAI_ENGINE_INTERNAL_HOST=http://genai-engine:3030
    env_file:
      - .env
    entrypoint:
      - python3
      - app/job_agent.py
    healthcheck:
      test: wget -qO - http://127.0.0.1:7492/health
      interval: 30s
      timeout: 5s
      retries: 5
    depends_on:
      genai-engine:
        condition: service_healthy
